---
import { getCollection } from 'astro:content';

// Get all blog posts for search
const allPosts = await getCollection('blog');
const searchData = allPosts
  .filter(post => !post.data.draft)
  .map(post => ({
    title: post.data.title,
    description: post.data.description,
    slug: post.slug,
    tags: post.data.tags || [],
    pubDate: post.data.pubDate,
    content: post.body.slice(0, 500) // First 500 chars for search
  }));
---

<div id="search-modal" class="fixed inset-0 z-50 bg-black/50 backdrop-blur-sm opacity-0 pointer-events-none transition-all duration-300">
  <div class="flex items-start justify-center min-h-screen pt-16 px-4">
    <div class="bg-white dark:bg-zinc-900 rounded-xl shadow-2xl w-full max-w-2xl transform scale-95 transition-transform duration-300">
      <!-- Search Header -->
      <div class="flex items-center p-4 border-b border-zinc-200 dark:border-zinc-800">
        <div class="relative flex-1">
          <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-zinc-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
          <input 
            type="text" 
            id="search-input"
            placeholder="Buscar artículos..." 
            class="w-full pl-10 pr-4 py-3 bg-transparent border-none outline-none text-zinc-900 dark:text-zinc-100 placeholder-zinc-500 dark:placeholder-zinc-400"
            autocomplete="off"
          />
        </div>
        <button 
          id="close-search"
          class="ml-4 p-2 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-lg transition-colors"
          aria-label="Cerrar búsqueda"
        >
          <svg class="w-5 h-5 text-zinc-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <!-- Search Results -->
      <div id="search-results" class="max-h-96 overflow-y-auto">
        <div class="p-4 text-center text-zinc-500 dark:text-zinc-400">
          Escribe para buscar artículos...
        </div>
      </div>
      
      <!-- Search Footer -->
      <div class="p-4 border-t border-zinc-200 dark:border-zinc-800 text-xs text-zinc-500 dark:text-zinc-400">
        <div class="flex items-center justify-between">
          <span>Presiona <kbd class="px-1 py-0.5 bg-zinc-100 dark:bg-zinc-800 rounded text-xs">Esc</kbd> para cerrar</span>
          <span id="result-count">0 resultados</span>
        </div>
      </div>
    </div>
  </div>
</div>

<script define:vars={{ searchData }}>
  class SearchModal {
    constructor() {
      this.modal = document.getElementById('search-modal');
      this.input = document.getElementById('search-input');
      this.results = document.getElementById('search-results');
      this.resultCount = document.getElementById('result-count');
      this.closeBtn = document.getElementById('close-search');
      
      this.isOpen = false;
      this.searchData = searchData;
      
      this.init();
    }
    
    init() {
      // Keyboard shortcuts
      document.addEventListener('keydown', (e) => {
        if (e.key === '/' && !this.isOpen) {
          e.preventDefault();
          this.open();
        } else if (e.key === 'Escape' && this.isOpen) {
          this.close();
        }
      });
      
      // Close button
      this.closeBtn.addEventListener('click', () => this.close());
      
      // Click outside to close
      this.modal.addEventListener('click', (e) => {
        if (e.target === this.modal) {
          this.close();
        }
      });
      
      // Search input
      this.input.addEventListener('input', (e) => {
        this.search(e.target.value);
      });
      
      // Add search button to navigation
      this.addSearchButton();
    }
    
    addSearchButton() {
      const nav = document.querySelector('nav');
      if (nav) {
        const searchBtn = document.createElement('button');
        searchBtn.innerHTML = `
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        `;
        searchBtn.className = 'p-2 hover:bg-zinc-100 dark:hover:bg-zinc-800 rounded-lg transition-colors';
        searchBtn.setAttribute('aria-label', 'Buscar');
        searchBtn.addEventListener('click', () => this.open());
        
        nav.appendChild(searchBtn);
      }
    }
    
    open() {
      this.isOpen = true;
      this.modal.classList.remove('opacity-0', 'pointer-events-none');
      this.modal.querySelector('.transform').classList.remove('scale-95');
      this.input.focus();
      document.body.style.overflow = 'hidden';
    }
    
    close() {
      this.isOpen = false;
      this.modal.classList.add('opacity-0', 'pointer-events-none');
      this.modal.querySelector('.transform').classList.add('scale-95');
      this.input.value = '';
      this.results.innerHTML = '<div class="p-4 text-center text-zinc-500 dark:text-zinc-400">Escribe para buscar artículos...</div>';
      this.resultCount.textContent = '0 resultados';
      document.body.style.overflow = '';
    }
    
    search(query) {
      if (!query.trim()) {
        this.results.innerHTML = '<div class="p-4 text-center text-zinc-500 dark:text-zinc-400">Escribe para buscar artículos...</div>';
        this.resultCount.textContent = '0 resultados';
        return;
      }
      
      const results = this.searchData.filter(post => {
        const searchText = `${post.title} ${post.description} ${post.content} ${post.tags.join(' ')}`.toLowerCase();
        return searchText.includes(query.toLowerCase());
      });
      
      this.displayResults(results);
    }
    
    displayResults(results) {
      this.resultCount.textContent = `${results.length} resultado${results.length !== 1 ? 's' : ''}`;
      
      if (results.length === 0) {
        this.results.innerHTML = `
          <div class="p-4 text-center text-zinc-500 dark:text-zinc-400">
            No se encontraron resultados para tu búsqueda.
          </div>
        `;
        return;
      }
      
      this.results.innerHTML = results.map(post => `
        <a href="/blog/${post.slug}" class="block p-4 hover:bg-zinc-50 dark:hover:bg-zinc-800 transition-colors border-b border-zinc-100 dark:border-zinc-800 last:border-b-0">
          <h3 class="font-semibold text-zinc-900 dark:text-zinc-100 mb-1">${post.title}</h3>
          <p class="text-sm text-zinc-600 dark:text-zinc-400 mb-2 line-clamp-2">${post.description}</p>
          <div class="flex items-center gap-2 text-xs text-zinc-500 dark:text-zinc-500">
            <span>${new Date(post.pubDate).toLocaleDateString('es-ES')}</span>
            ${post.tags.length > 0 ? `<span>•</span><span>${post.tags.slice(0, 2).join(', ')}</span>` : ''}
          </div>
        </a>
      `).join('');
    }
  }
  
  // Initialize search when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    new SearchModal();
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  kbd {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  }
</style>
