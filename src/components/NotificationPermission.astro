---
// Push notification permission component
---

<div id="notification-permission" class="fixed bottom-4 right-4 z-50 transform translate-y-full transition-transform duration-300">
  <div class="bg-white dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-lg shadow-lg p-4 max-w-sm">
    <div class="flex items-start gap-3">
      <div class="flex-shrink-0">
        <svg class="w-5 h-5 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5v-5zM4.5 19.5L19.5 4.5M19.5 4.5L14.5 4.5M19.5 4.5L19.5 9.5" />
        </svg>
      </div>
      <div class="flex-1">
        <h3 class="text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1">
          Notificaciones
        </h3>
        <p class="text-xs text-zinc-600 dark:text-zinc-400 mb-3">
          Recibe notificaciones cuando publiquemos nuevos artículos.
        </p>
        <div class="flex gap-2">
          <button 
            id="enable-notifications"
            class="px-3 py-1.5 bg-primary-600 hover:bg-primary-700 text-white text-xs font-medium rounded transition-colors"
          >
            Permitir
          </button>
          <button 
            id="dismiss-notifications"
            class="px-3 py-1.5 bg-zinc-100 hover:bg-zinc-200 dark:bg-zinc-700 dark:hover:bg-zinc-600 text-zinc-700 dark:text-zinc-300 text-xs font-medium rounded transition-colors"
          >
            Ahora no
          </button>
        </div>
      </div>
      <button 
        id="close-notification-permission"
        class="flex-shrink-0 p-1 hover:bg-zinc-100 dark:hover:bg-zinc-700 rounded"
      >
        <svg class="w-4 h-4 text-zinc-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const permissionBanner = document.getElementById('notification-permission');
    const enableBtn = document.getElementById('enable-notifications');
    const dismissBtn = document.getElementById('dismiss-notifications');
    const closeBtn = document.getElementById('close-notification-permission');
    
    if (!permissionBanner || !enableBtn || !dismissBtn || !closeBtn) return;
    
    // Check if notifications are supported
    if (!('Notification' in window) || !('serviceWorker' in navigator)) {
      return;
    }
    
    // Check if permission was already requested
    const permissionAsked = localStorage.getItem('notification-permission-asked');
    if (permissionAsked) {
      return;
    }
    
    // Show banner after 5 seconds
    setTimeout(() => {
      if (Notification.permission === 'default') {
        permissionBanner.classList.remove('translate-y-full');
      }
    }, 5000);
    
    // Enable notifications
    enableBtn.addEventListener('click', async () => {
      try {
        const permission = await Notification.requestPermission();
        
        if (permission === 'granted') {
          // Register for push notifications
          const registration = await navigator.serviceWorker.ready;
          
          // Subscribe to push notifications
          const subscription = await registration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: 'BEl62iUYgUivxIkv69yViEuiBIa40HIcF7w5Z-EdGtBQvP8ZbeXrq1i8vy3QQz6HK35NkqHBrUaE6M' // Replace with your VAPID key
          });
          
          // Send subscription to server
          await fetch('/api/subscribe', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(subscription)
          });
          
          // Track permission granted
          if (typeof window !== 'undefined' && window.gtag) {
            window.gtag('event', 'notification_permission_granted', {
              event_category: 'engagement',
              event_label: 'push_notifications'
            });
          }
          
          hideBanner();
          showSuccessMessage('¡Notificaciones habilitadas!');
          
        } else {
          hideBanner();
        }
        
        localStorage.setItem('notification-permission-asked', 'true');
        
      } catch (error) {
        console.error('Error requesting notification permission:', error);
        hideBanner();
      }
    });
    
    // Dismiss notifications
    dismissBtn.addEventListener('click', () => {
      hideBanner();
      localStorage.setItem('notification-permission-asked', 'true');
      
      // Track dismissal
      if (typeof window !== 'undefined' && window.gtag) {
        window.gtag('event', 'notification_permission_dismissed', {
          event_category: 'engagement',
          event_label: 'push_notifications'
        });
      }
    });
    
    // Close banner
    closeBtn.addEventListener('click', () => {
      hideBanner();
    });
    
    function hideBanner() {
      permissionBanner.classList.add('translate-y-full');
    }
    
    function showSuccessMessage(message) {
      const successDiv = document.createElement('div');
      successDiv.className = 'fixed top-4 right-4 z-50 bg-green-500 text-white px-4 py-2 rounded-lg shadow-lg';
      successDiv.textContent = message;
      document.body.appendChild(successDiv);
      
      setTimeout(() => {
        successDiv.remove();
      }, 3000);
    }
  });
</script>
