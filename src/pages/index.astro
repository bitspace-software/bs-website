---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';

// Get all blog posts
const allPosts = await getCollection('blog');

// Get the 2 most recent posts
const recentPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
  .slice(0, 2);

// Get all unique tags from posts
const allTags = [...new Set(allPosts.flatMap(post => post.data.tags || []))].slice(0, 5);
---

<Layout title="Home | Bitspace Software">
  <!-- Hero Section with improved mobile responsiveness -->
  <section class="pt-1 pb-3 sm:pt-6 sm:pb-8 md:pt-10 md:pb-12 px-3 sm:px-4 theme-transition-all">
    <div class="max-w-7xl mx-auto relative">
      <!-- Adjusted blob positions and sizes for better mobile appearance with radial gradient -->
      <div class="absolute -top-10 sm:-top-20 -left-10 sm:-left-20 w-40 sm:w-64 h-40 sm:h-64 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-blue-500 via-blue-400 to-transparent dark:from-blue-600 dark:via-blue-500/80 rounded-full blur-3xl opacity-40 animate-blob theme-transition-bg"></div>
      <div class="absolute -bottom-10 sm:-bottom-20 -right-10 sm:-right-20 w-40 sm:w-64 h-40 sm:h-64 bg-[radial-gradient(ellipse_at_center,_var(--tw-gradient-stops))] from-amber-500 via-orange-400 to-transparent dark:from-amber-600 dark:via-orange-500/80 rounded-full blur-3xl opacity-35 animate-blob animation-delay-2000 theme-transition-bg"></div>
      
      <div class="relative grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-start">
        <!-- Hero Text (Left) -->
        <div class="text-center sm:text-left lg:sticky lg:top-24 self-start">
          <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold tracking-tight text-zinc-900 dark:text-brand-text theme-transition-color">
          <span class="block">Datos y</span>
            <span class="block mt-1">
              software que
            </span>
          <span class="block mt-1 relative">
            <span class="relative inline-block">
                generan
                <span class="ml-2 inline-block">
                  <span id="rotating-word">valor real</span>
                </span>.
                <span class="absolute bottom-0 left-0 w-full h-1 bg-primary-500 dark:bg-brand-accentOrange transform origin-left theme-transition-bg" style="bottom: -10px;"></span>
              </span>
            </span>
          </h1>
          <p class="mt-6 sm:mt-8 md:mt-10 text-base sm:text-lg md:text-xl text-zinc-600 dark:text-brand-textSecondary leading-relaxed theme-transition-color max-w-2xl mx-auto sm:mx-0">
            Desarrollamos soluciones digitales confiables y escalables que transforman datos en resultados.</p>
        </div>
        
        <!-- Elegant Services Preview (Right) -->
        <div class="block lg:relative mt-8 lg:mt-0">
          <div class="flex flex-col gap-2 lg:absolute lg:top-0 lg:w-full">
            <!-- Service 1: Development -->
            <div class="service-accordion border border-zinc-200/60 dark:border-zinc-800/40 bg-white/60 dark:bg-white/60 backdrop-blur-[2px] rounded-xl hover:shadow-md transition-all duration-300" data-service="dev">
              <button class="service-header w-full flex items-center gap-4 p-4 cursor-pointer group" data-scroll="fade-in" style="animation-delay: 0.1s;">
                <div class="flex-shrink-0 w-14 h-14 rounded-xl bg-gradient-to-br from-blue-500 to-blue-600 flex items-center justify-center shadow-lg">
                  <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                </div>
                <div class="flex-1 min-w-0 text-left">
                  <h3 class="font-semibold text-sm text-zinc-900 dark:text-white mb-0.5 theme-transition-color">
                    Desarrollo
                  </h3>
                  <p class="text-xs text-zinc-600 dark:text-zinc-300 theme-transition-color">
                    Software a medida
                  </p>
                </div>
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-zinc-400 dark:text-zinc-500 group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-transform duration-300 service-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </button>
              <div class="service-content px-4 pb-4" style="display: none; max-height: 0; opacity: 0; padding-top: 0; padding-bottom: 0;">
                <p class="text-sm text-zinc-700 dark:text-zinc-200 leading-relaxed theme-transition-color">
                  Aplicaciones web y móviles escalables, construidas con las mejores prácticas y tecnologías modernas. Transformamos tus ideas en software robusto y eficiente.
                </p>
              </div>
            </div>
            
            <!-- Service 2: Data & AI -->
            <div class="service-accordion border border-zinc-200/60 dark:border-zinc-800/40 bg-white/60 dark:bg-white/60 backdrop-blur-[2px] rounded-xl hover:shadow-md transition-all duration-300" data-service="data">
              <button class="service-header w-full flex items-center gap-4 p-4 cursor-pointer group" data-scroll="fade-in" style="animation-delay: 0.2s;">
                <div class="flex-shrink-0 w-14 h-14 rounded-xl bg-gradient-to-br from-amber-500 to-orange-500 flex items-center justify-center shadow-lg">
                  <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                  </svg>
                </div>
                <div class="flex-1 min-w-0 text-left">
                  <h3 class="font-semibold text-sm text-zinc-900 dark:text-white mb-0.5 theme-transition-color">
                    Datos & IA
                  </h3>
                  <p class="text-xs text-zinc-600 dark:text-zinc-300 theme-transition-color">
                    Consultoría inteligente
                  </p>
                </div>
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-zinc-400 dark:text-zinc-500 group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-transform duration-300 service-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </button>
              <div class="service-content px-4 pb-4" style="display: none; max-height: 0; opacity: 0; padding-top: 0; padding-bottom: 0;">
                <p class="text-sm text-zinc-700 dark:text-zinc-200 leading-relaxed theme-transition-color">
                  Modelos, análisis y pipelines inteligentes que convierten datos en decisiones estratégicas. Desbloqueamos el potencial de tus datos.
                </p>
              </div>
            </div>
            
            <!-- Service 3: Integration -->
            <div class="service-accordion border border-zinc-200/60 dark:border-zinc-800/40 bg-white/60 dark:bg-white/60 backdrop-blur-[2px] rounded-xl hover:shadow-md transition-all duration-300" data-service="integration">
              <button class="service-header w-full flex items-center gap-4 p-4 cursor-pointer group" data-scroll="fade-in" style="animation-delay: 0.3s;">
                <div class="flex-shrink-0 w-14 h-14 rounded-xl bg-gradient-to-br from-primary-500 to-primary-600 flex items-center justify-center shadow-lg">
                  <svg class="w-7 h-7 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1" />
                  </svg>
                </div>
                <div class="flex-1 min-w-0 text-left">
                  <h3 class="font-semibold text-sm text-zinc-900 dark:text-white mb-0.5 theme-transition-color">
                    Integraciones
                  </h3>
                  <p class="text-xs text-zinc-600 dark:text-zinc-300 theme-transition-color">
                    Sistemas conectados
                  </p>
                </div>
                <div class="flex-shrink-0">
                  <svg class="w-5 h-5 text-zinc-400 dark:text-zinc-500 group-hover:text-zinc-600 dark:group-hover:text-zinc-300 transition-transform duration-300 service-arrow" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </button>
              <div class="service-content px-4 pb-4" style="display: none; max-height: 0; opacity: 0; padding-top: 0; padding-bottom: 0;">
                <p class="text-sm text-zinc-700 dark:text-zinc-200 leading-relaxed theme-transition-color">
                  APIs, automatización y sistemas interconectados que optimizan tus procesos de negocio. Conectamos tu infraestructura tecnológica.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Tech Stack Section -->
  <section class="py-4 md:py-8 px-3 sm:px-4">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-3 sm:mb-4">
        <h2 class="text-lg sm:text-xl md:text-2xl font-bold tracking-tight text-zinc-900 dark:text-brand-text theme-transition-color mb-2 sm:mb-3">
          Nuestro Stack Tecnológico
        </h2>
        <p class="text-xs sm:text-sm md:text-base text-zinc-600 dark:text-brand-textSecondary theme-transition-color max-w-2xl mx-auto px-4">
          Herramientas y tecnologías que utilizamos para construir soluciones robustas y escalables
        </p>
      </div>

      <!-- Tech Categories Grid -->
      <div class="grid grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-3 md:gap-4">
        <!-- Frontend -->
        <div class="group relative bg-gradient-to-br from-blue-50 to-blue-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-blue-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Frontend</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Astro</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">React</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Vue</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Next.js</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">TypeScript</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Tailwind</span>
            </div>
          </div>
        </div>

        <!-- Backend - Amber/Orange -->
        <div class="group relative bg-gradient-to-br from-amber-50 to-amber-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-amber-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-amber-600 dark:text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Backend</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Laravel</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Django</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Flask</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">CodeIgniter</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Express</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Node.js</span>
            </div>
          </div>
        </div>

        <!-- Database - Blue -->
        <div class="group relative bg-gradient-to-br from-blue-50 to-blue-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-blue-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Database</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">PostgreSQL</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">MongoDB</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Redis</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">MySQL</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">SQLite</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Firebase</span>
            </div>
          </div>
        </div>

        <!-- Cloud & DevOps - Purple (Tertiary) -->
        <div class="group relative bg-gradient-to-br from-purple-50 to-purple-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-purple-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 15a4 4 0 004 4h9a5 5 0 10-.1-9.999 5.002 5.002 0 10-9.78 2.096A4.001 4.001 0 003 15z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Cloud & DevOps</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">AWS</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">Docker</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">K8s</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">Vercel</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">GitHub</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">CI/CD</span>
            </div>
          </div>
        </div>

        <!-- Mobile - Blue -->
        <div class="group relative bg-gradient-to-br from-blue-50 to-blue-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-blue-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Mobile</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">React Native</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Swift</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Flutter</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Kotlin</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Ionic</span>
            </div>
          </div>
        </div>

        <!-- Data Tools - Amber/Orange -->
        <div class="group relative bg-gradient-to-br from-amber-50 to-amber-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-amber-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-amber-600 dark:text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Data Tools</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Pandas</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Spark</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Airflow</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">NumPy</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">Matplotlib</span>
              <span class="text-xs px-2 py-0.5 bg-amber-100 dark:bg-amber-900/30 text-amber-700 dark:text-amber-300 rounded-full">TensorFlow</span>
            </div>
          </div>
        </div>

        <!-- Testing - Blue -->
        <div class="group relative bg-gradient-to-br from-blue-50 to-blue-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-blue-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Testing</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Jest</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Cypress</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Pytest</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Mocha</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Chai</span>
              <span class="text-xs px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">Selenium</span>
            </div>
          </div>
        </div>

        <!-- Security - Purple (Tertiary) -->
        <div class="group relative bg-gradient-to-br from-purple-50 to-purple-100/50 dark:from-zinc-800 dark:to-zinc-900 rounded-lg sm:rounded-xl p-2.5 sm:p-4 border border-purple-100 dark:border-zinc-700/50 hover:shadow-lg hover:-translate-y-1 transition-all duration-300 theme-transition-all">
          <div class="text-center">
            <div class="w-8 h-8 sm:w-12 sm:h-12 mx-auto mb-1.5 sm:mb-2 flex items-center justify-center">
              <svg class="w-8 h-8 sm:w-12 sm:h-12 text-purple-600 dark:text-purple-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
              </svg>
            </div>
            <h3 class="text-xs sm:text-sm font-semibold text-zinc-900 dark:text-zinc-100 mb-1 theme-transition-color">Security</h3>
            <div class="flex flex-wrap gap-1 sm:gap-1.5 justify-center">
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">OAuth</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">JWT</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">SSL</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">OWASP</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">CORS</span>
              <span class="text-xs px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-full">HTTPS</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Nuestros Clientes Section -->
  <section class="py-4 md:py-8 px-3 sm:px-4">
    <div class="max-w-7xl mx-auto">
      <div class="text-center mb-3 sm:mb-4">
        <h2 class="text-lg sm:text-xl md:text-2xl font-bold tracking-tight text-zinc-900 dark:text-brand-text theme-transition-color mb-2 sm:mb-3">
          Nuestros Clientes
        </h2>
        <p class="text-sm sm:text-base text-zinc-600 dark:text-brand-textSecondary theme-transition-color max-w-2xl mx-auto">
          Confían en nosotros para transformar sus ideas en realidad
        </p>
      </div>
      
      <!-- Clients Grid -->
      <div class="grid grid-cols-1 sm:grid-cols-3 gap-4 md:gap-6 max-w-4xl mx-auto -mt-3 sm:-mt-4">
        <!-- Client 1 -->
        <div class="flex items-center justify-center px-4 sm:px-6 pb-2 sm:pb-3">
          <div class="text-center">
            <img src="/marenco-logo.png" alt="Marenco Ventiladores" class="h-12 sm:h-16 mx-auto object-contain" />
          </div>
        </div>

        <!-- Client 2 -->
        <div class="flex items-center justify-center px-4 sm:px-6 pb-2 sm:pb-3">
          <div class="text-center">
            <img src="/club-rotario-logo.png" alt="Club Rotario" class="h-20 sm:h-24 mx-auto object-contain" />
          </div>
        </div>

        <!-- Client 3 -->
        <div class="flex items-center justify-center px-4 sm:px-6 pb-2 sm:pb-3">
          <div class="text-center">
            <img src="/cosase-logo.svg" alt="COSASE" class="h-7 sm:h-10 mx-auto object-contain" />
          </div>
        </div>
      </div>

      <!-- CEO Testimonial -->
      <div class="mt-4 sm:mt-5 max-w-2xl mx-auto">
        <div class="relative group">
          <!-- Decorative background blob -->
          <div class="absolute inset-0 bg-gradient-to-br from-blue-100/50 to-purple-100/50 dark:from-blue-950/30 dark:to-purple-950/30 rounded-2xl blur-xl opacity-50 group-hover:opacity-70 transition-opacity"></div>
          
          <div class="relative bg-white dark:bg-zinc-900/95 backdrop-blur-md rounded-xl p-4 sm:p-5 border-2 border-zinc-200/60 dark:border-zinc-700/60 theme-transition-all">
            <div class="text-center space-y-3">
              <!-- Quote icon -->
              <div class="flex justify-center">
                <div class="p-1 rounded-full bg-primary-50 dark:bg-purple-950/40">
                  <svg class="w-3.5 h-3.5 text-primary-600 dark:text-purple-400" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z"/>
                  </svg>
                </div>
              </div>
              
              <!-- Quote text -->
              <blockquote class="text-sm font-medium text-zinc-800 dark:text-zinc-100 italic leading-relaxed theme-transition-color">
                "En Bitspace, no solo desarrollamos software, creamos soluciones que transforman datos en decisiones estratégicas. Cada proyecto es una oportunidad de generar impacto real para nuestros clientes."
              </blockquote>
              
              <!-- Author -->
              <div class="flex items-center justify-center gap-2">
                <div class="h-8 w-8 rounded-full bg-gradient-to-br from-primary-500 via-purple-500 to-amber-500 flex items-center justify-center text-white font-bold text-xs ring-2 ring-white dark:ring-zinc-800">
                  MB
                </div>
                <div class="text-left">
                  <p class="font-semibold text-sm text-zinc-900 dark:text-brand-text theme-transition-color">Marlon Beltrán</p>
                  <p class="text-xs text-zinc-600 dark:text-zinc-400 theme-transition-color">CEO & Founder, Bitspace</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Post Section - Compact Design with Glass Effect -->
  <section class="py-4 md:py-8 px-3 sm:px-4 border-t border-zinc-100 dark:border-zinc-700 theme-transition-all relative overflow-hidden">
    <!-- Glass background with brand colors -->
    <div class="absolute inset-0 bg-gradient-to-br from-blue-50/40 via-amber-50/30 to-transparent dark:from-blue-950/30 dark:via-amber-950/25 backdrop-blur-sm"></div>
    
    <!-- Decorative gradient blobs - consistent brand colors -->
    <div class="absolute inset-0 pointer-events-none">
      <div class="absolute -top-10 sm:-top-20 -left-10 sm:-left-20 w-40 sm:w-64 h-40 sm:h-64 bg-gradient-to-br from-primary-400/20 to-primary-600/15 rounded-full blur-3xl animate-blob"></div>
      <div class="absolute -bottom-10 sm:-bottom-20 -right-10 sm:-right-20 w-40 sm:w-64 h-40 sm:h-64 bg-gradient-to-br from-amber-400/20 to-orange-500/15 rounded-full blur-3xl animate-blob animation-delay-2000"></div>
    </div>
    
    <div class="max-w-7xl mx-auto relative z-10">
      <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-3 mb-3 sm:mb-4">
        <div class="flex-1">
          <h2 class="text-base sm:text-lg md:text-xl font-bold tracking-tight text-zinc-900 dark:text-brand-textSecondary theme-transition-color text-center sm:text-left">Posts Recientes</h2>
          <p class="mt-1 text-xs text-zinc-600 dark:text-brand-textSecondary text-center sm:text-left">
            Compartiendo ideas sobre datos y desarrollo de software.
          </p>
        </div>
        <a 
          href="/blog" 
          class="group relative text-xs font-medium text-zinc-900 dark:text-brand-text hover:text-primary-600 dark:hover:text-accent-400 self-center sm:self-auto theme-transition-color min-h-[36px] flex items-center justify-center"
        >
          <span class="flex items-center gap-1">
            Todos los posts
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3 transition-transform duration-300 group-hover:translate-x-1">
              <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
            </svg>
          </span>
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-primary-500 dark:bg-accent-500 transition-all duration-300 group-hover:w-full theme-transition-bg"></span>
        </a>
      </div>
      
      <!-- Full-width grid layout -->
      <div class="grid gap-3 sm:gap-4 grid-cols-1 lg:grid-cols-2">
        {recentPosts.map((post, index) => (
          <article class="group relative flex flex-col items-center sm:items-start hover-3d theme-transition-element w-full {index >= 1 ? 'hidden sm:flex' : ''}">
            <div class="absolute -inset-x-3 -inset-y-3 z-0 scale-95 bg-zinc-50 dark:bg-zinc-800/50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 sm:-inset-x-4 sm:rounded-xl theme-transition-bg"></div>
            
            {post.data.image && (
              <div class="relative z-10 w-full aspect-video mb-2 overflow-hidden rounded-lg">
                <img 
                  src={post.data.image} 
                  alt={post.data.title}
                  class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
                  loading={index === 0 ? "eager" : "lazy"}
                  width="400"
                  height="225"
                />
              </div>
            )}
            
            <div class="relative z-10 flex items-center flex-wrap gap-x-2 sm:gap-x-3 gap-y-1.5 text-[10px] sm:text-xs text-zinc-500 dark:text-brand-textSecondary theme-transition-color justify-center sm:justify-start w-full">
              <time datetime={post.data.pubDate.toISOString()} class="font-medium">
                <FormattedDate date={post.data.pubDate} format="long" />
              </time>
              <span class="relative z-10 rounded-full bg-zinc-100 dark:bg-brand-black px-2 py-0.5 font-medium text-zinc-600 dark:text-brand-text theme-transition-all text-[10px] sm:text-xs">
                {post.data.readingTime || `${Math.ceil(post.body.length / 2000)} min read`}
              </span>
            </div>
            
            <h3 class="relative z-10 mt-2 text-base sm:text-lg font-semibold tracking-tight text-zinc-900 dark:text-brand-text group-hover:text-zinc-700 dark:group-hover:text-brand-textSecondary transition-colors theme-transition-color text-center sm:text-left w-full">
              <a href={`/blog/${post.slug}`} class="min-h-[44px] flex items-center justify-center sm:justify-start">
                <span class="absolute -inset-x-3 -inset-y-2 sm:-inset-x-4 sm:-inset-y-3"></span>
                {post.data.title}
              </a>
            </h3>
            
            <p class="relative z-10 mt-1.5 text-xs text-zinc-600 dark:text-brand-textSecondary line-clamp-2 theme-transition-color text-center sm:text-left w-full">
              {post.data.description}
            </p>
            
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="relative z-10 mt-2 flex flex-wrap gap-1.5 justify-center sm:justify-start w-full">
                {post.data.tags.slice(0, 2).map(tag => (
                  <a 
                    href={`/tags/${tag}`}
                    class="inline-flex items-center rounded-full bg-zinc-100 px-1.5 py-0.5 text-[10px] font-medium text-zinc-800 hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-100 dark:hover:bg-zinc-700 transition-colors theme-transition-all min-h-[24px]"
                  >
                    #{tag}
                  </a>
                ))}
                {post.data.tags.length > 2 && (
                  <span class="inline-flex items-center rounded-full bg-zinc-50 px-1.5 py-0.5 text-[10px] font-medium text-zinc-500 dark:bg-zinc-800/50 dark:text-zinc-400 theme-transition-all min-h-[24px]">
                    +{post.data.tags.length - 2}
                  </span>
                )}
              </div>
            )}
            
            <a 
              href={`/blog/${post.slug}`}
              class="relative z-10 mt-2 flex items-center text-xs font-medium text-zinc-700 dark:text-zinc-300 group-hover:text-zinc-900 dark:group-hover:text-zinc-100 transition-colors theme-transition-color mx-auto sm:mx-0 min-h-[36px]"
            >
              <span class="relative overflow-hidden inline-block">
                <span class="group-hover:-translate-y-full block transition-transform duration-300">Leer artículo</span>
                <span class="absolute top-0 left-0 translate-y-full group-hover:translate-y-0 transition-transform duration-300 whitespace-nowrap">Explorar ahora</span>
              </span>
              <svg viewBox="0 0 16 16" fill="none" aria-hidden="true" class="ml-1 h-3 w-3 stroke-current transition-transform duration-300 group-hover:translate-x-1">
                <path d="M6.75 5.75 9.25 8l-2.5 2.25" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
              </svg>
            </a>
          </article>
        ))}
      </div>
    </div>
  </section>


  <!-- Topics/Tags Section - Improved for mobile -->
  {allTags.length > 0 && (
    <!-- section class="py-10 sm:py-12 md:py-16 px-4 sm:px-6 border-t border-zinc-100 dark:border-zinc-800 theme-transition-all">
      <div class="max-w-3xl mx-auto">
        <h2 class="text-xl sm:text-2xl md:text-3xl font-bold tracking-tight text-zinc-900 dark:text-zinc-100 mb-6 sm:mb-8 theme-transition-color text-center sm:text-left">Explorar topicos</h2>
        
        <-- Improved grid layout for mobile --
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3 sm:gap-4 max-w-xs sm:max-w-none mx-auto">
          {allTags.map(tag => {
            const tagCount = allPosts.filter(post => post.data.tags && post.data.tags.includes(tag)).length;
            return (
              <a 
                href={`/tags/${tag}`}
                class="group flex flex-col p-3 sm:p-4 md:p-6 rounded-xl border border-zinc-200 dark:border-zinc-800 hover:bg-zinc-50 dark:hover:bg-zinc-800/70 transition-all duration-300 theme-transition-all min-h-[80px] sm:min-h-[90px]"
              >
                <div class="flex items-start justify-between mb-2">
                  <span class="text-sm font-medium text-zinc-900 dark:text-zinc-100 theme-transition-color mr-2">#{tag}</span>
                  <span class="text-xs bg-zinc-100 dark:bg-zinc-800 text-zinc-500 dark:text-zinc-400 px-2 py-0.5 rounded-full flex-shrink-0 theme-transition-all">
                    {tagCount} {tagCount === 1 ? 'post' : 'posts'}
                  </span>
                </div>
                <p class="text-xs text-zinc-600 dark:text-zinc-400 mt-1 theme-transition-color">
                  Explora artículos sobre {tag}
                </p>
              </a>
            )
          })}
        </div>
        
        <div class="mt-6 sm:mt-8 text-center">
          <a 
            href="/tags" 
            class="inline-flex items-center text-sm font-medium text-zinc-900 dark:text-zinc-100 hover:text-zinc-700 dark:hover:text-zinc-300 theme-transition-color min-h-[44px]"
          >
            <span>Ver todos los topicos</span>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 ml-1 transition-transform duration-300 group-hover:translate-x-1">
              <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
            </svg>
          </a>
        </div>
      </div>
    </section -->
  )}
</Layout>

<script data-inline>
  // Add hover effect for cards on touch devices
  function initHomepage() {
    // Check if it's a touch device
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    
    if (isTouchDevice) {
      const cards = document.querySelectorAll('.hover-3d');
      
      cards.forEach(card => {
        card.addEventListener('touchstart', () => {
          card.classList.add('is-touched');
        });
        
        card.addEventListener('touchend', () => {
          setTimeout(() => {
            card.classList.remove('is-touched');
          }, 300);
        });
      });
      
      // Disable hover animations on touch devices for better performance
      document.documentElement.classList.add('touch-device');
    }
    
    // Improved viewport height fix for mobile browsers
    const setVh = () => {
      const vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);
    };
    
    // Set initial value
    setVh();
    
    // Update on resize and scroll to prevent content shifting
    window.addEventListener('resize', setVh);
    
    // Use a debounced scroll handler to prevent performance issues
    let scrollTimeout;
    window.addEventListener('scroll', () => {
      if (scrollTimeout) {
        window.cancelAnimationFrame(scrollTimeout);
      }
      
      scrollTimeout = window.requestAnimationFrame(() => {
        // Lock width during scroll
        document.body.style.width = '100%';
        document.body.style.overflowX = 'hidden';
      });
    });
    
    // Fix for iOS Safari address bar height changes
    if (/iPhone|iPad|iPod/.test(navigator.userAgent)) {
      // Force the layout to use the initial viewport size
      document.documentElement.style.setProperty('--initial-vh', `${window.innerHeight * 0.01}px`);
      
      // Apply fixed height to sections to prevent resizing
      const sections = document.querySelectorAll('section');
      sections.forEach(section => {
        section.style.width = '100%';
      });
    }
    
    // Improved theme change handler that preserves scroll position and provides smoother transitions
    document.addEventListener('themeChanged', () => {
      // Store current scroll position
      const scrollPosition = window.scrollY;
      
      // Create a temporary overlay for smoother transition
      const overlay = document.createElement('div');
      overlay.style.cssText = `
        position: fixed;
        inset: 0;
        background-color: ${document.documentElement.classList.contains('dark') ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.05)'};
        z-index: 9999;
        pointer-events: none;
        opacity: 0;
        transition: opacity 0.3s ease;
      `;
      document.body.appendChild(overlay);
      
      // Fade in overlay
      requestAnimationFrame(() => {
        overlay.style.opacity = '0.5';
        
        // Update theme-transition elements without forcing reflow of entire page
        requestAnimationFrame(() => {
          document.querySelectorAll('.theme-transition-all, .theme-transition-bg, .theme-transition-color')
            .forEach(el => {
              // Apply a subtle animation instead of a hard reset
              el.style.transition = 'all 0.5s ease';
            });
          
          // Fade out overlay after transition completes
          setTimeout(() => {
            overlay.style.opacity = '0';
            setTimeout(() => {
              overlay.remove();
            }, 300);
          }, 300);
        });
      });
      
      // Restore scroll position (prevents jumping to top)
      if (scrollPosition > 0) {
        setTimeout(() => {
          window.scrollTo({
            top: scrollPosition,
            behavior: 'auto' // Use 'auto' to prevent animation
          });
        }, 10);
      }
    });
    
    // Fix theme inconsistency issues by checking theme on visibility change
    document.addEventListener('visibilitychange', () => {
      if (document.visibilityState === 'visible') {
        const storedTheme = localStorage.getItem('theme');
        const currentThemeIsDark = document.documentElement.classList.contains('dark');
        
        if (storedTheme === 'dark' && !currentThemeIsDark) {
          document.documentElement.classList.add('dark');
        } else if (storedTheme === 'light' && currentThemeIsDark) {
          document.documentElement.classList.remove('dark');
        }
      }
    });
    
    // Add smooth reveal animations for content after loading
    const animateContent = () => {
      // Animate hero section
      const heroElements = document.querySelectorAll('.hero-text span, .hero-text + p, .hero-text ~ div');
      heroElements.forEach((el, index) => {
        setTimeout(() => {
          el.classList.add('animate-reveal');
        }, 100 + (index * 150));
      });
      
      // Animate posts with staggered delay
      const articles = document.querySelectorAll('article.group');
      articles.forEach((article, index) => {
        setTimeout(() => {
          article.classList.add('animate-reveal');
        }, 500 + (index * 150));
      });
      
      // Animate topic cards with staggered delay
      const topicCards = document.querySelectorAll('a.group.flex.flex-col');
      topicCards.forEach((card, index) => {
        setTimeout(() => {
          card.classList.add('animate-reveal');
        }, 800 + (index * 100));
      });
    };
    
    // Run animations after the loading screen is hidden
    const loadingScreen = document.getElementById('loading-screen');
    if (loadingScreen) {
      // Check if loading screen is already hidden (page refresh)
      if (loadingScreen.style.display === 'none') {
        animateContent();
      } else {
        // Wait for loading screen to hide
        const observer = new MutationObserver((mutations) => {
          mutations.forEach((mutation) => {
            if (mutation.target === loadingScreen && 
                mutation.type === 'attributes' && 
                mutation.attributeName === 'style' &&
                loadingScreen.style.display === 'none') {
              animateContent();
              observer.disconnect();
            }
          });
        });
        
        observer.observe(loadingScreen, { attributes: true });
        
        // Fallback
        setTimeout(animateContent, 3500);
      }
    } else {
      // If loading screen doesn't exist for some reason
      animateContent();
    }
  }
  
  // Initialize on first load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initHomepage);
  } else {
    initHomepage();
  }
  
  // Re-initialize when content changes via SPA
  document.addEventListener('astro:page-load', initHomepage);
  document.addEventListener('astro:after-swap', initHomepage);
  
  // Homepage specific initialization - let Layout handle SPA transitions
  function initializeHomepage() {
    // Only handle homepage-specific functionality
    const mainContent = document.querySelector('main');
    if (mainContent) {
      mainContent.style.opacity = '1';
      mainContent.style.transform = 'translateY(0)';
      mainContent.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
    }
  }
  
  // Initialize immediately and on events
  function setupHomepageInit() {
    initializeHomepage();
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupHomepageInit);
  } else {
    setupHomepageInit();
  }
  
  document.addEventListener('astro:page-load', setupHomepageInit);
  document.addEventListener('astro:after-swap', setupHomepageInit);

  // Rotating words animation
  let rotationInterval = null;
  let currentWordIndex = 0;
  
  function initializeRotatingWords() {
    // Clear existing interval if any
    if (rotationInterval) {
      clearInterval(rotationInterval);
      rotationInterval = null;
    }
    
    const rotatingWord = document.getElementById('rotating-word');
    if (!rotatingWord) {
      console.log('⏳ Waiting for rotating-word element...');
      // Retry after a short delay
      setTimeout(initializeRotatingWords, 100);
      return;
    }

    console.log('✅ Rotating word element found, initializing...');
    const words = ['valor real', 'impacto', 'crecimiento', 'confianza'];
    
    // Set initial word
    rotatingWord.textContent = words[currentWordIndex];

    function rotateWord() {
      const rotatingWordEl = document.getElementById('rotating-word');
      if (!rotatingWordEl) return;
      
      // Fade out with transform
      rotatingWordEl.style.transition = 'opacity 0.4s ease, transform 0.4s ease';
      rotatingWordEl.style.opacity = '0';
      rotatingWordEl.style.transform = 'translateY(-10px)';
      
      setTimeout(() => {
        currentWordIndex = (currentWordIndex + 1) % words.length;
        rotatingWordEl.textContent = words[currentWordIndex];
        
        // Start from below and fade in
        rotatingWordEl.style.transform = 'translateY(10px)';
        rotatingWordEl.style.opacity = '0';
        
        // Force reflow before animation starts
        void rotatingWordEl.offsetHeight;
        
        // Fade in with transform
        rotatingWordEl.style.opacity = '1';
        rotatingWordEl.style.transform = 'translateY(0)';
      }, 400);
    }

    // Start rotation after a delay
    setTimeout(() => {
      rotationInterval = setInterval(rotateWord, 2500);
      console.log('🔄 Rotating words started');
    }, 1000);
  }

  function setupRotatingWords() {
    initializeRotatingWords();
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupRotatingWords);
  } else {
    setupRotatingWords();
  }
  
  document.addEventListener('astro:page-load', setupRotatingWords);
  document.addEventListener('astro:after-swap', setupRotatingWords);
  
  // Service accordion functionality
  function initializeServiceAccordions() {
    const isDesktop = window.matchMedia('(min-width: 1024px)').matches;
    const accordions = document.querySelectorAll('.service-accordion');
    
    console.log('Initializing service accordions, found:', accordions.length, 'isDesktop:', isDesktop);
    
    // On desktop, add hover only (click is disabled for hover effect)
    if (isDesktop) {
      // Remove any existing click handlers to prevent conflicts
      accordions.forEach((accordion) => {
        const header = accordion.querySelector('.service-header');
        if (header) {
          header.removeEventListener('click', () => {});
        }
      });
      return;
    }
    
    accordions.forEach((accordion, index) => {
      const header = accordion.querySelector('.service-header');
      const content = accordion.querySelector('.service-content');
      const arrow = accordion.querySelector('.service-arrow');
      
      console.log(`Accordion ${index}:`, { header: !!header, content: !!content, arrow: !!arrow });
      
      if (header && content && arrow) {
        header.addEventListener('click', () => {
          console.log('Accordion clicked!');
          const isOpen = content.classList.contains('open');
          console.log('Is open:', isOpen);
          
          // Close all other accordions
          accordions.forEach(acc => {
            if (acc !== accordion) {
              const otherContent = acc.querySelector('.service-content');
              const otherArrow = acc.querySelector('.service-arrow');
              if (otherContent && otherArrow) {
                otherContent.classList.remove('open');
                acc.classList.remove('active');
                otherArrow.style.transform = 'rotate(0deg)';
                setTimeout(() => {
                  if (!otherContent.classList.contains('open')) {
                    otherContent.style.display = 'none';
                  }
                }, 400);
              }
            }
          });
          
          // Toggle current accordion
          if (isOpen) {
            console.log('Closing accordion');
            content.classList.remove('open');
            accordion.classList.remove('active');
            arrow.style.transform = 'rotate(0deg)';
            // Reset to hidden state
            setTimeout(() => {
              if (!content.classList.contains('open')) {
                content.style.display = 'none';
              }
            }, 400);
          } else {
            console.log('Opening accordion');
            content.style.display = 'block';
            // Force reflow
            void content.offsetHeight;
            content.classList.add('open');
            accordion.classList.add('active');
            arrow.style.transform = 'rotate(180deg)';
          }
        });
      }
    });
  }
  
  function setupServiceAccordions() {
    initializeServiceAccordions();
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupServiceAccordions);
  } else {
    setupServiceAccordions();
  }
  
  document.addEventListener('astro:page-load', setupServiceAccordions);
  document.addEventListener('astro:after-swap', setupServiceAccordions);
  
</script>

<style>
  /* Rotating word animation */
  #rotating-word {
    display: inline-block;
    transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1), 
                transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), 
                color 0.3s ease;
    will-change: opacity, transform;
  }

  /* Rotating word colors - match underline color for each mode */
  #rotating-word {
    color: #3B82F6;
  }

  /* Rotating word colors - dark mode (orange like the underline) */
  html.dark #rotating-word,
  .dark #rotating-word {
    color: #FFBF00 !important;
  }
  
  /* Additional specificity for dark mode */
  body.dark #rotating-word,
  html[class="dark"] #rotating-word {
    color: #FFBF00 !important;
  }

  /* Fix for theme transition issues */
  :global(:root) {
    --theme-transition-duration: 0.5s;
    --theme-transition-timing: ease;
  }
  
  :global(html), :global(body) {
    transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
  }
  
  :global(.theme-transition-all) {
    transition: all var(--theme-transition-duration) var(--theme-transition-timing);
  }
  
  :global(.theme-transition-bg) {
    transition: background-color var(--theme-transition-duration) var(--theme-transition-timing);
  }

  /* Elegant service cards fade-in animation */
  [data-scroll="fade-in"] {
    animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    opacity: 0;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Service accordion animations */
  .service-accordion {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
  }

  .service-content {
    max-height: 0;
    overflow: hidden;
    opacity: 0;
    padding-top: 0;
    padding-bottom: 0;
    line-height: 1.6;
    transition: max-height 0.35s cubic-bezier(0.16, 1, 0.3, 1),
                padding 0.35s cubic-bezier(0.16, 1, 0.3, 1),
                opacity 0.25s ease-in-out;
  }
  
  .service-accordion {
    transition: margin-bottom 0.35s cubic-bezier(0.16, 1, 0.3, 1);
  }

  .service-accordion .service-content.open {
    max-height: 350px !important;
    padding-top: 0.5rem !important;
    padding-bottom: 0.75rem !important;
    padding-left: 4rem !important;
    padding-right: 3rem !important;
    opacity: 1 !important;
    display: block !important;
  }

  .service-arrow {
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .service-accordion.active .service-arrow {
    transform: rotate(180deg);
  }

    /* Desktop styling for accordion */
    @media (min-width: 1024px) {
      .service-accordion {
        z-index: 1;
        margin-bottom: 0;
        transition: margin-bottom 0.35s cubic-bezier(0.16, 1, 0.3, 1);
      }
      
      .service-accordion:hover {
        z-index: 10;
        margin-bottom: 5rem;
      }
      
      /* Transparent background with backdrop-blur when not hovered */
      .service-accordion {
        background: rgba(250, 250, 250, 0.4) !important;
        backdrop-filter: blur(8px);
      }
      
      /* Dark mode: black background when not hovered */
      .dark .service-accordion {
        background: rgba(15, 15, 15, 1) !important;
      }
      
      .service-accordion:hover {
        background: rgba(250, 250, 250, 0.95) !important;
        backdrop-filter: blur(12px);
      }
      
      /* Dark mode: when hovered (expanded), use the same style as the sun button */
      .dark .service-accordion:hover {
        background: rgba(31, 41, 55, 0.4) !important;
        backdrop-filter: blur(8px);
      }
    
    .service-accordion .service-content {
      position: absolute;
      top: calc(100% - 1px);
      left: 0;
      right: 0;
      width: 100%;
      background: rgba(255, 255, 255, 1);
      backdrop-filter: blur(8px);
      border-radius: 0 0 0.75rem 0.75rem;
      box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.15), 0 4px 10px -2px rgba(0, 0, 0, 0.1);
      border-top: 1px solid transparent;
    }
    
    .dark .service-accordion .service-content {
      background: rgba(255, 255, 255, 1);
    }
    
    .service-accordion .service-header {
      border-radius: 0.75rem;
      transition: border-radius 0.35s cubic-bezier(0.16, 1, 0.3, 1);
    }
    
    .service-accordion:hover .service-header {
      border-radius: 0.75rem 0.75rem 0 0;
      background-color: rgba(255, 255, 255, 1);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }
    
    .dark .service-accordion:hover .service-header {
      background-color: rgba(255, 255, 255, 1);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
    }
    
    /* Show on hover instead of click */
    .service-accordion:hover .service-content {
      max-height: 350px !important;
      padding-top: 0.25rem !important;
      padding-bottom: 0.75rem !important;
      padding-left: 4rem !important;
      padding-right: 3rem !important;
      opacity: 1 !important;
      display: block !important;
    }
    
    .service-accordion:hover .service-arrow {
      transform: rotate(180deg);
    }
    
    /* Force text colors when hovered (expanded) */
    .service-accordion:hover .service-header h3,
    .service-accordion:hover .service-header p {
      color: #18181b !important; /* zinc-900 */
    }
    
    .dark .service-accordion:hover .service-header h3,
    .dark .service-accordion:hover .service-header p {
      color: #18181b !important; /* zinc-900 for dark backgrounds */
    }
  }
  
  /* Show when clicked (open class) - must be after media query */
  .service-accordion .service-content.open {
    display: block !important;
    max-height: 300px !important;
    padding-top: 0.75rem !important;
    padding-bottom: 0.75rem !important;
    padding-left: 1rem !important;
    padding-right: 1rem !important;
    opacity: 1 !important;
    visibility: visible !important;
  }
  
  /* Mobile specific styling for accordions */
  @media (max-width: 1023px) {
    .service-accordion .service-content {
      position: relative !important;
      border-radius: 0.75rem !important;
      background: rgba(255, 255, 255, 1) !important;
      backdrop-filter: none !important;
      box-shadow: none !important;
    }
    
    .service-accordion .service-content.open {
      padding-left: 1rem !important;
      padding-right: 1rem !important;
    }
    
    .dark .service-accordion .service-content {
      background: rgba(255, 255, 255, 1) !important;
    }
  }
  
  :global(.theme-transition-color) {
    transition: color var(--theme-transition-duration) var(--theme-transition-timing);
  }
  
  /* Ensure transitions apply to all theme-related properties */
  :global(*) {
    transition-property: background-color, border-color, color, fill, stroke, opacity;
    transition-duration: var(--theme-transition-duration);
    transition-timing-function: var(--theme-transition-timing);
  }
  
  /* Remove the forced transition disabling which causes flickering */
  :global(.theme-switching), :global(.theme-switching *) {
    /* Use a subtle transition instead of none */
    transition-duration: 0.3s !important;
  }
  
  /* Content reveal animations */
  .hero-text span, 
  .hero-text + p, 
  .hero-text ~ div,
  article.group,
  a.group.flex.flex-col {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }
  
  .animate-reveal {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }
  
  /* Rest of your existing styles... */
</style>

